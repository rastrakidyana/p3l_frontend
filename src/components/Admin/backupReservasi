<template>
    <v-main class="reservasi" v-if="load">
        <h3 class="pt-5 grey--text text-right font-weight-bold mr-15">Reservasi</h3>

        <div class="fullheight px-15">
            <v-card>
                <v-card-title>  
                    <v-btn color="#003249" dark @click="dialog = true">
                        Tambah Reservasi
                    </v-btn>

                    <v-spacer></v-spacer>
                    <v-text-field
                        v-model="search"
                        append-icon="mdi-magnify"
                        label="Cari"
                        single-line                        
                        hide-details>
                    </v-text-field>                                        
                </v-card-title>

                <v-data-table :headers="headers" :items="reservasis" :search="search" :items-per-page="5">
                    <template v-slot:[`item.actions`]="{ item }">
                        <v-btn color="#ff9a76" small class="mr-2" @click="detailHandler(item)">
                            <v-icon color="white">mdi-account-details</v-icon> 
                        </v-btn>
                        <v-btn color="#679b9b" small class="mr-2" @click="editHandler(item)">
                            <v-icon color="white">mdi-pencil</v-icon> 
                        </v-btn>                        
                        <v-btn color="pink" small @click="deleteHandler(item.id)">
                            <v-icon color="white">mdi-delete</v-icon> 
                        </v-btn>
                    </template>
                    <template v-slot:[`item.id_customer`]="{ item }">
                            {{ showCustomer(item.id_customer) }}
                    </template>                 
                </v-data-table>            
            </v-card>
        </div>

            <v-dialog v-model="dialog" persistent max-width="600px">
                <v-card>
                    <v-card-title>
                        <span class="headline font-weight-bold">{{ formTitle }} Reservasi</span>
                        <v-spacer></v-spacer>
                        <v-btn color="#810000" text @click="cancel">
                            <v-icon x-large>mdi-close-circle</v-icon>
                        </v-btn>
                    </v-card-title>
                    <v-card-text>
                        <v-container>
                            <v-form ref="form">                                                                               
                                <!-- <v-select 
                                    v-model="form.customer"
                                    :items="customerOptions"                                                                 
                                    item-text="nama_customer"
                                    item-value="id"
                                    label="Customer" 
                                    outlined                                                         
                                    required
                                    prepend-icon="mdi-wallet-giftcard">
                                </v-select> -->

                                <v-autocomplete
                                    v-model="form.customer"
                                    :items="customerOptions"                                                                 
                                    item-text="nama_customer"
                                    item-value="id"
                                    label="Customer" 
                                    outlined
                                    required
                                    prepend-icon="mdi-account"
                                ></v-autocomplete>  
                            
                                <v-select                                
                                    v-model="form.meja"                                
                                    :items="mejaOptionsWithoutUn(form.meja)"                                                                 
                                    item-text="no_meja"
                                    item-value="id"
                                    label='No. Meja'
                                    outlined                                                                                         
                                    required
                                    prepend-icon="mdi-table">
                                </v-select>                                                                                                                                         

                                <v-menu
                                    ref="menu"
                                    v-model="menu"
                                    :close-on-content-click="false"                                                                
                                    min-width="100px">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-text-field
                                                v-model="form.tgl"
                                                label="Tanggal Reservasi"
                                                prepend-icon="mdi-calendar-text"                                            
                                                readonly
                                                outlined
                                                v-bind="attrs"
                                                v-on="on"
                                                :rules="rules"
                                            ></v-text-field>
                                        </template>
                                        <v-date-picker
                                            ref="picker"
                                            v-model="form.tgl"                                                                                
                                            min="1950-01-01"
                                            @change="setDate">
                                        </v-date-picker>
                                </v-menu>

                                <v-select 
                                    v-model="form.kunjungan"
                                    :items="['Lunch', 'Dinner']"
                                    label="Jam Kunjungan" 
                                    outlined                                                         
                                    required
                                    prepend-icon="mdi-clock">
                                </v-select>                                                        
                            </v-form>
                        </v-container>
                    </v-card-text>
                    <v-card-actions class="justify-center">                                            
                        <v-btn color="#003249" dark @click="setForm">
                            Simpan
                        </v-btn>
                    </v-card-actions>
                </v-card>
            </v-dialog>

            <v-dialog v-model="dialogDelete" persistent max-width="400px">
                <v-card>
                    <v-card-title>                        
                        <v-spacer></v-spacer>
                            <v-btn color="#810000" text @click="dialogDelete = false">
                                <v-icon x-large>mdi-close-circle</v-icon>
                            </v-btn>                        
                    </v-card-title>                   
                    <v-card-text>                        
                        <h5 class="font-weight-bold">Hapus Reservasi?</h5>                        
                    </v-card-text>
                    <v-card-actions class="justify-center">                                           
                        <v-btn color="red darken-1" dark @click="deleteData">
                            Hapus
                        </v-btn>                                       
                    </v-card-actions>
                </v-card>
            </v-dialog>

            <v-dialog v-model="dialogDetail" persistent max-width="400px">
                <v-card
                    class="mx-auto"                                                       
                    max-width="400">
                    <v-card-title>                    
                    <span class="title font-weight-bold">Detail Reservasi</span>
                    <v-spacer></v-spacer>
                            <v-btn color="#810000" text @click="cancel">
                                <v-icon x-large>mdi-close-circle</v-icon>
                            </v-btn>   
                    </v-card-title>                     
                    <v-card-text class="font-weight-bold">
                        <v-form ref="form"> 
                            <v-list-item>
                            <v-list-item-content class="align-start">                            
                                <v-list-item-subtitle>Customer : {{ form.customer }}</v-list-item-subtitle>
                                <v-list-item-subtitle>No. Meja : {{ form.meja }}</v-list-item-subtitle>
                                <v-list-item-subtitle>Karyawan : {{ form.karyawan }}</v-list-item-subtitle>
                                <v-list-item-subtitle>Nota Transaksi : {{ form.nota }}</v-list-item-subtitle>
                                <v-list-item-subtitle>Tanggal Reservasi : {{ form.tgl }}</v-list-item-subtitle>                            
                                <v-list-item-subtitle>Jam Kunjungan : {{ form.kunjungan }}</v-list-item-subtitle>
                            </v-list-item-content>
                            </v-list-item>
                        </v-form>                                           
                    </v-card-text>                    
                </v-card>
            </v-dialog>

            <v-snackbar v-model="snackbar" :color="color" timeout="2000" bottom>
                {{error_message}}
            </v-snackbar>
    </v-main>
</template>


<script>
    export default {
        name: "reservasi",
        data() {
            return {
                inputType: 'Tambah',
                load: false,
                snackbar: false,
                error_message: '',
                color: '',
                menu: false,                               
                search: null,
                dialog: false,
                dialogDelete: false,
                dialogDetail: false,
                headers: [
                    {
                        text: "Customer",
                        align: "start",
                        sortable: true,
                        value: "id_customer",
                    },
                    { text: "Tanggal Reservasi", value: "tgl_reservasi" },
                    { text: "Jam Kunjungan", value: "jadwal_kunjungan" },
                    { text: "Actions", value: "actions" },
                ],
                reservasi: new FormData,
                reservasis: [],
                customerOptions: [],
                mejaOptions: [],
                karyawanOptions: [],
                userNow: [],
                hasils: [],
                form: {
                    customer: null,
                    meja: null,
                    karyawan: null,
                    nota: null,
                    tgl: null,
                    kunjungan: null,                    
                },                
                editId: '',
                deleteId: '',                
            };
        },

        methods: {
            readData() {
                var url = this.$api + '/reservasi'
                this.$http.get(url, {
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                }).then(response => {
                    console.log(response)                    
                        this.reservasis = response.data.data
                })
            },
            readDataUser() {
                var url = this.$api + '/karyawan/' + localStorage.getItem('id');
                console.log(url);
                this.$http.get(url, {
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                }).then(response => {
                    console.log(response)
                    this.userNow = response.data.data               
                })
            }, 
            readDataOptionCustomers() {
                var url = this.$api + '/customer'
                this.$http.get(url, {
                     headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                }).then(response => {                    
                    this.customerOptions = response.data.data                    
                })
            },
            readDataOptionMejas() {
                var url = this.$api + '/meja'
                this.$http.get(url, {
                     headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                }).then(response => {                    
                    this.mejaOptions = response.data.data                    
                })
            },
            readDataOptionKaryawans() {
                var url = this.$api + '/karyawan'
                this.$http.get(url, {
                     headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                }).then(response => {                    
                    this.karyawanOptions = response.data.data                    
                    this.load = true
                })
                :max="new Date().toISOString().substr(0, 10)"
            },              
            setForm() {
                if (this.inputType === 'Tambah') {
                    this.save()
                } else {
                    this.update()
                }
            },
            save() {
                this.reservasi.append('id_customer', this.form.customer);
                this.reservasi.append('id_meja', this.form.meja);
                this.reservasi.append('id_karyawan', this.userNow.id);                
                this.reservasi.append('tgl_reservasi', this.form.tgl);
                this.reservasi.append('jadwal_kunjungan', this.form.kunjungan);                                
                var url = this.$api + '/reservasi'
                this.load = true
                this.$http.post(url, this.reservasi, {
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                }).then(response => {
                    this.error_message = response.data.message;
                    this.color="green"
                    this.snackbar=true;
                    this.load=false;
                    this.close();
                    this.readData();
                    this.resetForm();
                }).catch(error => {
                    this.error_message=error.response.data.message;
                    this.color="red"
                    this.snackbar=true;
                    this.load=false;
                })
            },
            update() {
                let newData = {
                    id_customer: this.form.customer,
                    id_meja: this.form.meja,
                    id_karyawan: this.userNow.id,
                    tgl_reservasi: this.form.tgl,
                    jadwal_kunjungan: this.form.kunjungan,                    
                }
                var url = this.$api + '/reservasi/' + this.editId;
                this.load = true
                this.$http.put(url, newData, {
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                }).then(response => {
                    this.error_message = response.data.message;
                    this.color="green"
                    this.snackbar=true;
                    this.load=false;
                    this.close();
                    this.readData();
                    this.resetForm();
                    this.inputType = 'Tambah';
                }).catch(error => {
                    this.error_message=error.response.data.message;
                    this.color="red"
                    this.snackbar=true;
                    this.load=false;
                })
            },            
            deleteData() {
                var url = this.$api + '/reservasi_hapus/' + this.deleteId;
                console.log(url);
                this.$http.get(url, {
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                }).then(response => {
                    this.error_message = response.data.message;
                    this.color="green"
                    this.snackbar=true;
                    this.load=false;                    
                    this.close();
                    this.readData();
                    this.resetForm();
                    this.inputType = 'Tambah';
                }).catch(error => {
                    this.error_message=error.response.data.message;
                    this.color="red"
                    this.snackbar=true;                    
                    this.load=false;
                })
            },
            detailHandler(item) {                
                this.editId = item.id;                                
                this.form.customer = this.showCustomer(item.id_customer),
                this.form.meja = this.showMeja(item.id_meja),
                this.form.karyawan = this.showKaryawan(item.id_karyawan),
                // this.form.nota = this.showNota(item.id_transaksi),
                this.form.tgl = item.tgl_reservasi,
                this.form.kunjungan = item.jadwal_kunjungan,  
                this.dialogDetail = true;
            },
            editHandler(item) {
                this.inputType = 'Ubah';
                this.editId = item.id;                                
                this.form.customer = item.id_customer,
                this.form.meja = item.id_meja,                
                this.form.tgl = item.tgl_reservasi,
                this.form.kunjungan = item.jadwal_kunjungan,                  
                this.dialog = true;
                console.log(this.hasils);
            },            
            deleteHandler(id) {
                this.deleteId = id;                
                this.dialogDelete = true;
            },
            close() {
                this.dialog = false;
                this.dialogDelete = false;
                this.inputType = 'Tambah';                
            },
            cancel() {
                this.resetForm();
                this.$refs.form.reset();                                
                this.dialog = false;
                this.dialogDetail = false;                
                this.inputType = 'Tambah';
            },
            resetForm() {
                this.form = {
                    customer: null,
                    meja: null,
                    karyawan: null,
                    nota: null,
                    tgl: null,
                    kunjungan: null,                    
                };
                this.hasils = [];                                                                   
            },
            showCustomer(id){               
                 var object = this.customerOptions.filter(customerOption => customerOption.id === id)
                 console.log(object)
                 return object[0].nama_customer                 
            },
            showMeja(id){               
                 var object = this.mejaOptions.filter(mejaOption => mejaOption.id === id)
                 console.log(object)
                 return object[0].no_meja                 
            },
            showKaryawan(id){               
                 var object = this.karyawanOptions.filter(karyawanOption => karyawanOption.id === id)
                 console.log(object)
                 return object[0].nama_karyawan                 
            },
            mejaOptionsWithoutUn(id){
                var object = 0;                           
                for (let index = 0; index < this.mejaOptions.length; index++) {
                    if (this.mejaOptions[index].status_meja == 'Tersedia' || this.mejaOptions[index].id == id){
                          this.hasils[object] = this.mejaOptions[index];
                          object++;
                    }                    
                }                
                return this.hasils;                  
            },            
            setDate(date){
                this.$refs.menu.save(date)
            },                                                                                                     
        },
        watch: {
            menu(val){
                val && setTimeout(() => (this.$refs.picker.activePicker = 'DATE'))
            },
        },
        computed: {
            formTitle() {
                return this.inputType
            },            
        },
        mounted() {            
            this.readData();
            this.readDataUser();
            this.readDataOptionCustomers();
            this.readDataOptionMejas();
            this.readDataOptionKaryawans();
        },
    };
</script>

